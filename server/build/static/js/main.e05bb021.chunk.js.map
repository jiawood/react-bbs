{"version":3,"sources":["assets/bgc.jpg","reducers/userReducer.js","reducers/rootReducer.js","Utils.js","api/api.js","components/Header/Header.js","components/HomeTop/HomeTop.js","components/HomeMain/ContentItem.js","components/HomeMain/ContentContainer.js","components/HomeMain/HomeMain.js","views/Home.js","components/PostDetail/PostDetail.js","components/CreatePost/CreatePost.js","components/Login/Login.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initState","isLogined","loginedUser","userReducer","state","action","type","payload","rootReducer","combineReducers","user","request","config","axios","create","baseURL","withCredentials","instance","parseTime","time","now","moment","Date","toISOString","lastTime","diff","diffDuration","duration","timeArray","days","hours","minutes","getComments","postId","url","getProfile","userId","method","data","locale","Header","useSelector","useEffect","then","res","code","dispatch","useDispatch","history","useHistory","goToHome","push","className","onClick","notification","open","message","description","icon","SmileOutlined","style","color","FrownTwoTone","name","HomeTop","disabled","ContentItem","props","useState","userInfo","setUserInfo","commentsInfo","setCommentsInfo","item","tag","1","2","3","4","category","src","process","avator","alt","title","length","ContentContainer","posts","map","key","HomeMain","path","useParams","currentInedx","setCurrentIndex","categoryId","setCategoryId","ItemList","index","tpath","itemClick","setPosts","total","share","discuss","complain","complement","getPosts","Home","CommentItem","comment","profileInfo","setProfileInfo","content","AddComment","setCommentInfo","commentInfo","contentRef","useRef","ref","e","preventDefault","current","value","addComment","commentId","toString","newInfo","unshift","PostDetail","setUserId","postInfo","setPostInfo","contentLines","setContentLines","params","postDetail","split","line","layout","labelCol","span","wrapperCol","tailLayout","offset","CreatePost","useForm","form","LoginedUser","mapCategoty","CloseOutlined","initialValues","remember","onFinish","values","getFieldValue","addPosts","go","resetFields","onFinishFailed","errorInfo","console","log","Item","label","rules","required","TextArea","Option","rows","htmlType","Login","password","login","username","Password","valuePropName","Register","setAvator","email","formData","FormData","append","getValueFromEvent","Array","isArray","file","fileList","listType","beforeUpload","size","UploadOutlined","App","bcImg","exact","to","pathname","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e05bb021.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgc.31a52870.jpg\";","const initState = {\r\n  isLogined: false,\r\n  loginedUser: {\r\n\r\n  }\r\n};\r\n\r\nconst userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"set-isLogined\":\r\n      return {\r\n        ...state,\r\n        isLogined: action.payload\r\n      }\r\n    case \"set-loginedUser\":\r\n      return {\r\n        ...state,\r\n        loginedUser: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import userReducer from './userReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nmoment.locale('zh-cn')\r\n\r\nexport function request(config){\r\n  const instance = axios.create({\r\n    baseURL: '',\r\n    withCredentials: true\r\n  })\r\n  return instance(config)\r\n}\r\n\r\nexport function parseTime(time){\r\n  const now = moment(new Date().toISOString())\r\n  const lastTime = moment(time)\r\n  const diff = now.diff(lastTime)\r\n  const diffDuration = moment.duration(diff)\r\n  let timeArray = [\r\n    diffDuration.days(),\r\n    diffDuration.hours(),\r\n    diffDuration.minutes()\r\n  ]\r\n  if (timeArray[0] > 0) {\r\n    return `${timeArray[0]}天前`\r\n  } else if (timeArray[1] > 0) {\r\n    return `${timeArray[1]}小时${timeArray[2]}分钟前`\r\n  } else if (timeArray[2] > 0) {\r\n    return `${timeArray[2]}分钟前`\r\n  } else {\r\n    return `刚刚`\r\n  }\r\n}\r\n","import {request} from '../Utils'\r\n\r\n//获取分类为3的所有的帖子\r\nexport function getPosts(categoryId) {\r\n  return request({\r\n    url: `/posts/${categoryId}`\r\n  })\r\n}\r\n\r\n//增加帖子\r\nexport function addPosts(userId, title, content, value) {\r\n  return request({\r\n    url: `/posts/${value}`,\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      title,\r\n      content\r\n    }\r\n  })\r\n}\r\n\r\n//获得回复\r\nexport function getComments(postId) {\r\n  return request({\r\n    url: `/comments/${postId}`\r\n  })\r\n}\r\n\r\n//增加回复\r\nexport function addComment(postId, content) {\r\n  return request({\r\n    url: `/comments/${postId}`,\r\n    method: 'post',\r\n    data: {\r\n      content\r\n    }\r\n  })\r\n}\r\n\r\n//获取个人信息\r\nexport function getProfile(userId) {\r\n  return request({\r\n    url: '/profile',\r\n    method: 'post',\r\n    data: {\r\n      userId: userId\r\n    }\r\n  })\r\n}\r\n\r\n//获取数据评论\r\nexport function getPostComment(id) {\r\n  return request({\r\n    url: '/post',\r\n    method: 'post',\r\n    data: {\r\n      id: id\r\n    }\r\n  })\r\n}\r\n\r\n//注册\r\nexport function register(data) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n//登录\r\nexport function login(name, password) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      name,\r\n      password\r\n    }\r\n  })\r\n}\r\n\r\n//获得帖子详情\r\nexport function postDetail(postId) {\r\n  return request({\r\n    url: '/postDetail',\r\n    method: 'get',\r\n    params: {\r\n      postId\r\n    }\r\n  })\r\n}\r\n\r\n//页面刷新时，通过cookie判断用户是否登录，设置vuex里面的loginedUser\r\nexport function userIsLogined() {\r\n  return request({\r\n    url: '/isLogined',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n//登出\r\nexport function signOut() {\r\n  return request({\r\n    url: '/signout'\r\n  })\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {userIsLogined,signOut} from \"../../api/api\";\r\nimport { notification } from \"antd\";\r\nimport { SmileOutlined, FrownTwoTone } from \"@ant-design/icons\";\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n  const isLogined = useSelector((state) => state.user.isLogined);\r\n  const loginedUser = useSelector((state) => state.user.loginedUser);\r\n  // const isLogined = false\r\n  // const loginedUser = {name: 'xj',age:'21'}\r\n\r\n//页面挂载的时候，判断有没有cookie，然后设置页面的登录状态\r\n  useEffect(() => {\r\n    userIsLogined().then(res => {\r\n      if(res.data.code === 0){\r\n        dispatch({type:'set-isLogined',payload:true})\r\n        dispatch({type:'set-loginedUser',payload:res.data.user })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n  const quit = () => {\r\n    signOut().then(res => {\r\n      if(res.data.code === 0){\r\n        notification.open({\r\n          message: \"登出成功！\",\r\n          description: \"您已成功登出，欢迎再来玩哦\",\r\n          icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n        });\r\n        dispatch({type:'set-isLogined',payload:false})\r\n        dispatch({type:'set-loginedUser',payload:{}})\r\n      }else{\r\n        notification.open({\r\n          message: '登出失败！',\r\n          description:\r\n            '发生未知错误，很抱歉',\r\n          icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n        });\r\n      }\r\n    })\r\n  };\r\n\r\n  const goToHome = () => {\r\n    history.push(\"/home/total\");\r\n  };\r\n  const login = () => {\r\n    history.push(\"/login\")\r\n  }\r\n  const register = () => {\r\n    history.push(\"/register\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"left-log\">\r\n          <span>FEG</span>\r\n        </div>\r\n        <div className=\"right-login\">\r\n          {isLogined ? (\r\n            <div className=\"logined\">\r\n              <div className=\"sign-out\" onClick={quit}>\r\n                登出\r\n              </div>\r\n              <div className=\"user\">{loginedUser.name}</div>\r\n              <div className=\"home\" onClick={goToHome}>首页</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-logined\">\r\n              <div onClick={login}>登录</div>\r\n              <div onClick={register}>注册</div>\r\n              <div className=\"home\" onClick={goToHome}>首页</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './HomeTop.scss'\r\n\r\n// //导入antd样式\r\n// import zhCN from 'antd/es/locale/zh_CN';\r\n// import 'antd/dist/antd.css';\r\n\r\nconst HomeTop = () => {\r\n  const isLogined = useSelector(state => state.user.isLogined)\r\n  const loginedUser = useSelector(state => state.user.loginedUser)\r\n  const history = useHistory()\r\n  const goPost = () => {\r\n    history.push(\"/createpost\")\r\n  }\r\n  return (\r\n    <div className=\"home-top\">\r\n      {\r\n        isLogined? (\r\n          <div className=\"logined\">\r\n            <div className=\"welcome\">嗨，{loginedUser.name}</div>\r\n            <div className=\"message\">您已登录，快来发布新主题吧~</div>\r\n            <Button type=\"primary\" onClick={goPost}>发布新主题</Button>\r\n          </div>\r\n        ):(\r\n          <div className=\"unlogined\">\r\n            <div className=\"welcome\">欢迎来到前端小组</div>\r\n            <div className=\"message\">您还未登录,暂时无法发布新主题！</div>\r\n            <Button disabled>发布新主题</Button>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default HomeTop;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getComments, getProfile } from \"../../api/api\";\r\nimport { parseTime } from \"../../Utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//子组件的props应该是一个单独的item，里面包含了帖子的信心，userId,postId,name,content,\r\n//分别通过userId和postId拿到用户的信息和帖子的信息，这些信息全放在props上\r\nconst ContentItem = (props) => {\r\n  //console.log(props)\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [commentsInfo, setCommentsInfo] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getProfile(props.item.userId).then((res) => {\r\n      let data = res.data;\r\n      // console.log(data)\r\n      setUserInfo(data);\r\n    });\r\n  }, [props.item.userId]);\r\n  useEffect(() => {\r\n    getComments(props.item.postId).then((res) => {\r\n      let data = res.data;\r\n      //console.log(data)\r\n      setCommentsInfo(data);\r\n    });\r\n  }, [props.item.postId]);\r\n\r\n  const clickItem = (postId) => {\r\n    history.push(`/postDetail/${postId}`)\r\n  };\r\n\r\n  const tagMap = { 1: \"分享\", 2: \"讨论\", 3: \"吐槽\", 4: \"夸夸\" };\r\n\r\n  const tag = tagMap[props.item.category];\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"content-item\"\r\n      onClick={() => clickItem(props.item.postId)}\r\n    >\r\n      <div className=\"avator\">\r\n        <img src={process.env.REACT_APP_AVATAR_BASEURL + userInfo.avator} alt=\"\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"title\">{props.item.title}</div>\r\n        <div className=\"detail\">\r\n          <span className=\"share\">{tag}</span>·\r\n          <span className=\"user\">{userInfo.name}</span>·\r\n          <span className=\"time\">{parseTime(props.item.time)}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"counts\">\r\n        {commentsInfo.length > 0 ? (\r\n          <div className=\"count\">{commentsInfo.length}</div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentItem;\r\n","import React from 'react';\r\nimport ContentItem from \"./ContentItem\";\r\n\r\nconst ContentContainer = (props) => {\r\n  // console.log(props.posts)\r\n  return (\r\n    <div className=\"content-container\">\r\n      <div className=\"posts\">\r\n        {props.posts.length > 0\r\n          ? props.posts.map((item) => (\r\n              <ContentItem item={item} key={item.postId} />\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentContainer\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPosts } from \"../../api/api\";\r\nimport \"./HomeMain.scss\";\r\nimport ContentContainer from './ContentContainer'\r\n\r\n\r\n\r\nconst HomeMain = () => {\r\n  const history = useHistory();\r\n  const { path } = useParams();\r\n\r\n  const classifyData = [\r\n    { name: \"全部\", categoryId: 0, path: \"/total\" },\r\n    { name: \"分享\", categoryId: 1, path: \"/share\" },\r\n    { name: \"讨论\", categoryId: 2, path: \"/discuss\" },\r\n    { name: \"吐槽\", categoryId: 3, path: \"/complain\" },\r\n    { name: \"夸夸\", categoryId: 4, path: \"/complement\" },\r\n  ];\r\n\r\n  const [currentInedx, setCurrentIndex] = useState(0);\r\n  const [categoryId, setCategoryId] = useState(0);\r\n\r\n  const itemClick = (index, tpath) => {\r\n    setCurrentIndex(index);\r\n    setCategoryId(index);\r\n    if(path !== tpath){\r\n      history.push(`/home${tpath}`);\r\n    }\r\n  };\r\n\r\n  const ItemList = classifyData.map((item, index) => (\r\n    <div\r\n      className={index === currentInedx ? \"active item\" : \"item\"}\r\n      key={item.path}\r\n      onClick={() => itemClick(index, item.path)}\r\n    >\r\n      {item.name}\r\n    </div>\r\n  ));\r\n\r\n  //写主页面所有的帖子,首先帖子的数据得先拿到，得使用useEffect,然后，将数据渲染\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let map = { total: 0, share: 1, discuss: 2, complain: 3, complement: 4 };\r\n    setCurrentIndex(map[path]);\r\n    getPosts(map[path]).then((res) => {\r\n      let data = res.data;\r\n      //console.log(data)\r\n      setPosts(data);\r\n    });\r\n    return () => {\r\n      map = null;\r\n    };\r\n  }, [categoryId, path]);\r\n\r\n  return (\r\n    <div className=\"home-main\">\r\n      <div className=\"classify\">{ItemList}</div>\r\n      <div className=\"container\">\r\n         <ContentContainer posts={posts}></ContentContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeMain;\r\n","import React from 'react';\r\nimport HomeTop from '../components/HomeTop/HomeTop'\r\nimport HomeMain from \"../components/HomeMain/HomeMain\";\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <HomeTop />\r\n      <HomeMain></HomeMain>\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getComments, getProfile, postDetail, addComment } from \"../../api/api\";\r\nimport { parseTime } from \"../../Utils\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Button, notification } from \"antd\";\r\nimport { SmileOutlined, FrownTwoTone } from \"@ant-design/icons\";\r\nimport \"./PostDetail.scss\";\r\nimport { useRef } from \"react\";\r\n\r\nconst CommentItem = ({ comment }) => {\r\n  const [profileInfo, setProfileInfo] = useState([]);\r\n  useEffect(() => {\r\n    getProfile(comment.userId).then((res) => {\r\n      setProfileInfo(res.data);\r\n    });\r\n  }, [comment.userId]);\r\n  // console.log(process)\r\n  // console.log(process.env)\r\n  // console.log(process.env.REACT_APP_AVATAR_BASEURL)\r\n  return (\r\n    <div className=\"comment-item\">\r\n      <div className=\"avator\">\r\n        <img\r\n          src={process.env.REACT_APP_AVATAR_BASEURL + profileInfo.avator}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"message\">\r\n        <span className=\"name\">{profileInfo.name}</span>·\r\n        <span className=\"time\">{parseTime(comment.time)}</span>\r\n      </div>\r\n      <div className=\"commnets\">{comment.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddComment = ({ setCommentInfo, commentInfo }) => {\r\n  const isLogined = useSelector((state) => state.user.isLogined);\r\n  const loginedUser = useSelector((state) => state.user.loginedUser);\r\n  const contentRef = useRef();\r\n  const { postId } = useParams();\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!isLogined) {\r\n      notification.open({\r\n        message: \"回复失败！\",\r\n        description: \"您未登录，暂时无法回复。请先登录之后，再回复哟！\",\r\n        icon: <FrownTwoTone style={{ color: \"#ff4c4c\" }} />,\r\n      });\r\n    } else {\r\n      if (!contentRef.current.value) {\r\n        notification.open({\r\n          message: \"回复失败！\",\r\n          description: \"回复内容为空！\",\r\n          icon: <FrownTwoTone style={{ color: \"#ff4c4c\" }} />,\r\n        });\r\n      } else {\r\n        addComment(postId, contentRef.current.value).then((res) => {\r\n          if (res.data.code === 0) {\r\n            let data = {\r\n              commentId: 56,\r\n              content: contentRef.current.value,\r\n              postId: postId,\r\n              time: new Date().toString(),\r\n              userId: loginedUser.userId,\r\n            };\r\n            let newInfo = [...commentInfo]\r\n            newInfo.unshift(data);\r\n            setCommentInfo(newInfo);\r\n            notification.open({\r\n              message: \"回复成功！\",\r\n              description: \"您已成功发表一条回复\",\r\n              icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n            });\r\n            contentRef.current.value = \"\";\r\n          } else {\r\n            notification.open({\r\n              message: \"回复失败！\",\r\n              description: \"很抱歉，发生未知错误！\",\r\n              icon: <FrownTwoTone style={{ color: \"#ff4c4c\" }} />,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-comments\">\r\n      <div className=\"header\">\r\n        <div className=\"left\">增加一条新回复</div>\r\n      </div>\r\n      <div className=\"form\">\r\n        <textarea ref={contentRef} className=\"textarea\"></textarea>\r\n      </div>\r\n      <div className=\"submit\" onClick={submit}>\r\n        <Button className=\"button\">回复</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostDetail = () => {\r\n  let { postId } = useParams();\r\n  const [userId, setUserId] = useState(0);\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [postInfo, setPostInfo] = useState([]);\r\n  const [commentInfo, setCommentInfo] = useState([]);\r\n  const [contentLines, setContentLines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    postDetail(postId).then((res) => {\r\n      let data = res.data;\r\n      setPostInfo(data);\r\n      setUserId(data.userId);\r\n      setContentLines(res.data.content.split(\"\\n\"));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getProfile(userId).then((res) => {\r\n      setUserInfo(res.data);\r\n    });\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    getComments(postId).then((res) => {\r\n      setCommentInfo(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-detail\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">{postInfo.title}</div>\r\n          <div className=\"message\">\r\n            <span className=\"name\">{userInfo.name}</span>·\r\n            <span className=\"time\">{parseTime(postInfo.time)}</span>\r\n          </div>\r\n          <div className=\"avator\">\r\n            <img\r\n              src={process.env.REACT_APP_AVATAR_BASEURL + userInfo.avator}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"post-content\">\r\n          {contentLines\r\n            ? contentLines.map((line, index) => <p key={index}>{line}</p>)\r\n            : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"comments\">\r\n        <div className=\"top\">\r\n          <span>{commentInfo.length}</span>条回复·\r\n          <span>{new Date().toString()}</span>\r\n        </div>\r\n        <div className=\"comment\">\r\n          {commentInfo.map((comment) => (\r\n            <CommentItem key={comment.time} comment={comment}></CommentItem>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"add-comments\">\r\n        <AddComment\r\n          setCommentInfo={setCommentInfo}\r\n          commentInfo={commentInfo}\r\n        ></AddComment>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport { Button, Form, Input,notification,Select } from \"antd\";\r\nimport { SmileOutlined ,FrownTwoTone} from '@ant-design/icons';\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { addPosts } from \"../../api/api\";\r\nimport './CreatePost.scss'\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst CreatePost = () => {\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n  const isLogined = useSelector(state => state.user.isLogined)\r\n  const LoginedUser = useSelector(state => state.user.loginedUser)\r\n\r\n  const mapCategoty = {'share':1,'discuss':2,'complain':3,'compliment':4}\r\n\r\n  const onFinish = (values) => {\r\n    if(isLogined){\r\n      let title = form.getFieldValue().title\r\n      let category = form.getFieldValue().category\r\n      let content = form.getFieldValue().content\r\n      let categoryId = mapCategoty[category]\r\n\r\n      addPosts(LoginedUser.userId,title,content,categoryId).then(res => {\r\n        if(res.data.code === 0){\r\n          notification.open({\r\n            message: '发帖成功！',\r\n            description:\r\n              '发帖成功，已为您自动跳转:)',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n          });\r\n          history.go(-1)\r\n          form.resetFields();\r\n        }else {\r\n          notification.open({\r\n            message: '发帖失败！',\r\n            description:\r\n              '发生了未知错误，抱歉',\r\n            icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  }\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"create-post\">\r\n      <div className=\"container\">\r\n      <div className=\"header\">发布新主题</div>\r\n      <Button className=\"close\" icon={<CloseOutlined />}></Button>\r\n      <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={\r\n        {remember: true}\r\n      }\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      form={form}\r\n      >\r\n        <Form.Item\r\n        label=\"标题\"\r\n        name=\"title\"\r\n        rules={[\r\n          {\r\n            required:true,\r\n            message: '请输入一个标题'\r\n          }\r\n        ]}\r\n        >\r\n          <Input.TextArea></Input.TextArea>\r\n\r\n        </Form.Item>\r\n        <Form.Item label=\"分类\" name=\"category\"\r\n                rules={[\r\n                  {\r\n                    required:true,\r\n                    message: '请选择一个分类'\r\n                  }\r\n                ]}\r\n        >\r\n          <Select>\r\n            <Select.Option value=\"share\">分享</Select.Option>\r\n            <Select.Option value=\"discuss\">讨论</Select.Option>\r\n            <Select.Option value=\"complain\">吐槽</Select.Option>\r\n            <Select.Option value=\"compliment\">夸夸</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n        label=\"内容\"\r\n        name=\"content\"\r\n        rules={[\r\n          {\r\n            required:true,\r\n            message: '请输入内容'\r\n          }\r\n        ]}\r\n        >\r\n          <Input.TextArea rows={4} ></Input.TextArea>\r\n\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset} className=\"reset\">\r\n          Reset\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      </Form>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport { Button, Form, Input, Checkbox,notification } from \"antd\";\r\nimport { SmileOutlined ,FrownTwoTone} from '@ant-design/icons';\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../../api/api\";\r\nimport './Login.scss'\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Login = () => {\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n  const isLogined = useSelector(state => state.user.isLogined)\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    if(!isLogined){\r\n      let name = form.getFieldValue().username\r\n      let password = form.getFieldValue().password\r\n      login(name,password).then(res => {\r\n        if(res.data.code === -2){\r\n          notification.open({\r\n            message: '用户未注册！',\r\n            description:\r\n              '用户名错误，您可能还未注册，请注册之后再重新登录',\r\n            icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n          });\r\n        }else if(res.data.code === -1){\r\n          notification.open({\r\n            message: '密码错误！',\r\n            description:\r\n              '登录密码错误，重新登录',\r\n            icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n          });\r\n        }else {\r\n          notification.open({\r\n            message: '登录成功！',\r\n            description:\r\n              '您已成功登录，现在你可以发布新帖子，或者回复其他人的帖子,希望您在 前端小组 里玩的愉快:)',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n          });\r\n          dispatch({type:'set-isLogined',payload:true})\r\n          dispatch({type:'set-loginedUser',payload:res.data.user})\r\n          form.resetFields();\r\n          history.push('/home/total')\r\n        }\r\n      })\r\n      console.log('Success:', values);\r\n\r\n    }else{\r\n      notification.open({\r\n        message: '请勿重复登录！',\r\n        description:\r\n          '您已登录，请勿重复登录，如果您要切换账号，请登出后再登录！',\r\n        icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  }\r\n\r\n  const close = () => {\r\n    history.go(-1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-login\">\r\n      <div className=\"header\">登录</div>\r\n  <Button className=\"close\" icon={<CloseOutlined />} onClick={close}></Button>\r\n      <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      form = {form}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset}>\r\n          Reset\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","\r\nimport React,{useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport { Button, Form, Input,notification,Upload } from \"antd\";\r\nimport { SmileOutlined ,FrownTwoTone,UploadOutlined} from '@ant-design/icons';\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { register } from \"../../api/api\";\r\nimport './Register.scss'\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Register = () => {\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n  const isLogined = useSelector(state => state.user.isLogined)\r\n\r\n\r\n  const [avator, setAvator] = useState({});\r\n\r\n  const onFinish = (values) => {\r\n\r\n    if(!isLogined){\r\n      let name = form.getFieldValue().name\r\n      let password = form.getFieldValue().password\r\n      let email = form.getFieldValue().email\r\n      let formData = new FormData()\r\n      formData.append('name',name)\r\n      formData.append('password',password)\r\n      formData.append('email',email)\r\n      formData.append('avator',avator,avator.name)\r\n\r\n\r\n\r\n      register(formData).then(res => {\r\n        console.log(res)\r\n        if(res.data.code === 0){\r\n          notification.open({\r\n            message: '注册成功！',\r\n            description:\r\n              '您已成功注册，请登录:)',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n          });\r\n          history.push('/login')\r\n          form.resetFields();\r\n        }else {\r\n          notification.open({\r\n            message: '注册失败！',\r\n            description:\r\n              '发生了未知错误，抱歉',\r\n            icon: <FrownTwoTone style={{ color: '#ff4c4c' }} />,\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  }\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  }\r\n\r\n  const normFile = e => {\r\n\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    // console.log(e)\r\n    setAvator(e.file)\r\n    return e && e.fileList;\r\n  };\r\n\r\n\r\n  //这样可以阻止头像默认上传\r\n  const handleBeforeUpload = (file,size) => {\r\n    return false\r\n  }\r\n\r\n  const close = () => {\r\n    history.go(-1)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"container\">\r\n      <div className=\"header\">注册</div>\r\n      <Button className=\"close\" icon={<CloseOutlined />} onClick={close}></Button>\r\n      <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={\r\n        {remember: true}\r\n      }\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      form={form}\r\n      >\r\n        <Form.Item\r\n        label=\"姓名\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required:true,\r\n            message: '请输入您的姓名'\r\n          }\r\n        ]}\r\n        >\r\n          <Input></Input>\r\n\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required:true,\r\n                    message: '请输入密码'\r\n                  }\r\n                ]}\r\n        >\r\n          <Input.Password></Input.Password>\r\n        </Form.Item>\r\n        <Form.Item\r\n        label=\"邮箱\"\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required:true,\r\n            message: '请输入邮箱'\r\n          }\r\n        ]}\r\n        >\r\n          <Input></Input>\r\n\r\n        </Form.Item>\r\n        <Form.Item label=\"上传头像\" name=\"avator\"\r\n        valuePropName=\"fileList\"\r\n        getValueFromEvent={normFile}\r\n        >\r\n        <Upload name=\"logo\" listType=\"picture\" beforeUpload={handleBeforeUpload}>\r\n          <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n        </Upload>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset} className=\"reset\">\r\n          Reset\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      </Form>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Home from \"./views/Home\";\nimport PostDetail from \"./components/PostDetail/PostDetail\";\nimport CreatePost from \"./components/CreatePost/CreatePost\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\n// import 'antd/dist/antd.css'\n\nimport bcImg from \"./assets/bgc.jpg\";\n\nimport \"./App.scss\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header-container\">\n        <Header></Header>\n      </div>\n      <div className=\"img\">\n        <img src={bcImg} alt=\"\"/>\n      </div>\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to = {{\n              pathname:\"/home/total\"\n            }}></Redirect>\n          </Route>\n          <Route path=\"/home/:path\">\n            <Home></Home>\n          </Route>\n          <Route path=\"/postdetail/:postId\">\n            <PostDetail />\n          </Route>\n          <Route path=\"/createpost\">\n            <CreatePost />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\n//导入antd样式\n// import 'antd/dist/antd.less';\n// // import '../src/assets/antd.less'\n\n// import 'antd/lib/style/themes/default.less';\n//import 'antd/dist/antd.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}